devtools::load_all(".")
devtools::load_all(".")
?detect_cp_uni
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp_uni(data = data_vec,
n_iterations = 2500,
q = 0.25)
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp_uni(data = data_vec,
n_iterations = 2500,
q = 0.25, a = 1, b = 1, c = 0.1)
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp_uni(data = data_vec,
n_iterations = 2500,
q = 0.25, a = 1, b = 1, c = 0.1)
?lm
devtools::load_all(".")
?detect_cp
?sim_epi_data
?sim_epi_data
devtools::load_all(".")
?sim_epi_data
betas <- list(c(rep(0.45, 25),rep(0.14,25)))
inf_times <- as.numeric()
inf_times <- sim_epi_data(10000, 10, 50, betas[[i]], 1/8)
betas <- c(rep(0.45, 25),rep(0.14,25))
inf_times <- as.numeric()
inf_times <- sim_epi_data(10000, 10, 50, betas, 1/8)
inf_times
?detect_cp
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out)
data_mat <- matrix(NA, nrow = 3, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
out <- detect_cp(data = data_mat, n_iterations = 2500, n_burnin = 500,
params = list(m_0 = rep(0,3), k_0 = 0.25, nu_0 = 4, S_0 = diag(1,3,3)))
plot(out)
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out)
data_mat <- matrix(NA, nrow = 3, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
out <- detect_cp(data = data_mat, n_iterations = 2500, n_burnin = 500,
params = list(m_0 = rep(0,3), k_0 = 0.25, nu_0 = 4, S_0 = diag(1,3,3)))
plot(out)
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out)
data_mat <- matrix(NA, nrow = 3, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
out <- detect_cp(data = data_mat, n_iterations = 2500, n_burnin = 500,
params = list(m_0 = rep(0,3), k_0 = 0.25, nu_0 = 4, S_0 = diag(1,3,3)))
plot(out)
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out)
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out)
devtools::load_all(".")
data_mat <- matrix(NA, nrow = 3, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
out <- detect_cp(data = data_mat, n_iterations = 2500, n_burnin = 500,
params = list(m_0 = rep(0,3), k_0 = 0.25, nu_0 = 4, S_0 = diag(1,3,3)))
plot(out)
plot(out, plot_freq = T)
devtools::load_all(".")
data_mat <- matrix(NA, nrow = 3, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
out <- detect_cp(data = data_mat, n_iterations = 2500, n_burnin = 500,
params = list(m_0 = rep(0,3), k_0 = 0.25, nu_0 = 4, S_0 = diag(1,3,3)))
plot(out, plot_freq = T)
devtools::load_all(".")
data_mat <- matrix(NA, nrow = 3, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
out <- detect_cp(data = data_mat, n_iterations = 2500, n_burnin = 500,
params = list(m_0 = rep(0,3), k_0 = 0.25, nu_0 = 4, S_0 = diag(1,3,3)))
plot(out, plot_freq = T)
devtools::load_all(".")
data_mat <- matrix(NA, nrow = 3, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
out <- detect_cp(data = data_mat, n_iterations = 2500, n_burnin = 500,
params = list(m_0 = rep(0,3), k_0 = 0.25, nu_0 = 4, S_0 = diag(1,3,3)))
plot(out, plot_freq = T)
devtools::load_all(".")
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out, plot_freq = T)
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out, plot_freq = T)
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out, plot_freq = F)
devtools::load_all(".")
plot(out, plot_freq = T)
devtools::load_all(".")
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1))
print(out)
plot(out, plot_freq = T)
plot(out, plot_freq = T)
devtools::load_all(".")
plot(out, plot_freq = F)
plot(out, plot_freq = T)
ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, group = obs, colour = Cluster)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::xlab("Time") +
ggplot2::ylab("Proportion of Infected Individuals") +
ggplot2::theme_minimal()
devtools::load_all(".")
?clust_cp
## Univariate time series
data_mat <- matrix(NA, nrow = 5, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_mat[4,] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_mat[5,] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- clust_cp(data = data_mat, n_iterations = 5000, n_burnin = 1000,
L = 1, B = 1000, params = list(phi = 0.5), kernel = "ts")
plot(out)
data_array <- array(data = NA, dim = c(3,100,5))
data_array[1,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[2,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[3,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[1,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[2,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[3,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[1,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[2,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[3,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[1,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[2,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[3,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[1,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
data_array[2,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
data_array[3,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- clust_cp(data = data_array, n_iterations = 3000, n_burnin = 1000,
params = list(B = 1000, phi = 0.5, k_0 = 0.25,
nu_0 = 5, S_0 = diag(0.1,3,3),
m_0 = rep(0,3)), kernel = "ts")
plot(out)
devtools::load_all(".")
plot(out)
data_mat <- matrix(NA, nrow = 5, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_mat[4,] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_mat[5,] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- clust_cp(data = data_mat, n_iterations = 5000, n_burnin = 1000,
L = 1, B = 1000, params = list(phi = 0.5), kernel = "ts")
plot(out)
devtools::load_all(".")
plot(out)
devtools::load_all(".")
plot(out)
devtools::load_all(".")
devtools::load_all(".")
plot(out)
devtools::load_all(".")
data_array <- array(data = NA, dim = c(3,100,5))
data_array[1,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[2,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[3,,1] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[1,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[2,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[3,,2] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_array[1,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[2,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[3,,3] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_array[1,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[2,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[3,,4] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_array[1,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
data_array[2,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
data_array[3,,5] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- clust_cp(data = data_array, n_iterations = 3000, n_burnin = 1000,
params = list(B = 1000, phi = 0.5, k_0 = 0.25,
nu_0 = 5, S_0 = diag(0.1,3,3),
m_0 = rep(0,3)), kernel = "ts")
plot(out)
x <- out
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
.data_plot <- data.frame(Value = numeric(0))
loss = "binder"
est_cp = posterior_estimate(x,loss)
.data_plot <- data.frame(Value = numeric(0))
.data_plot
for (i in 1:dim(x$data)[3]) {
mat <- x$data[,,i]
.data_plot <- rbind(.data_plot, data.frame(Value = as.vector(mat),
Observation = i,
Cluster = est_cp[i],
count = sort(rep(1:nrow(mat), ncol(mat))),
Time = rep(1:ncol(mat),nrow(mat))))
}
.data_plot
.data_plot$Observation <- as.factor(.data_plot$Observation)
.data_plot$Cluster <- as.factor(.data_plot$Cluster)
.data_plot$count <- as.factor(.data_plot$count)
.data_plot$Observation
.data_plot$Cluster
.data_plot$count
ggplot2::ggplot(.data_plot) +
#ggplot2::geom_line(ggplot2::aes(x = Time, y = Value, color = Cluster, group = interaction(Observation,count), linetype = Observation)) +
ggplot2::geom_line(ggplot2::aes(x = Time, y = Value, color = Observation, group = interaction(Observation,count), linetype = Cluster)) +
ggplot2::xlab("Time") +
ggplot2::ylab("Value") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
.data_plot <- data.frame(Value = numeric(0))
x$data
.data_plot <- data.frame(Value = numeric(0))
for (i in 1:dim(x$data)[3]) {
mat <- x$data[,,i]
.data_plot <- rbind(.data_plot, data.frame(Value = as.vector(mat),
Observation = i,
Cluster = est_cp[i],
count = sort(rep(1:nrow(mat), ncol(mat))),
Time = rep(1:ncol(mat),nrow(mat))))
}
devtools::load_all(".")
?rnorm
rnorm(0,1)
rnorm(0,1)
rnorm(1,0,1)
rnorm(1,0,1)
?clust_cp
devtools::load_all(".")
?clust_cp
devtools::load_all(".")
betas <- c(rep(0.45, 25),rep(0.14,25))
inf_times <- sim_epi_data(10000, 10, 50, betas, 1/8)
inf_times
vec <- rep(0,50)
names(vec) <- as.character(1:50)
for(j in 1:50){
if(as.character(j) %in% names(table(floor(inf_times[[i]])))){
vec[j] = table(floor(inf_times[[i]]))[which(names(table(floor(inf_times[[i]]))) == j)]
}
}
names(vec) <- as.character(1:50)
for(j in 1:50){
if(as.character(j) %in% names(table(floor(inf_times)))){
vec[j] = table(floor(inf_times))[which(names(table(floor(inf_times))) == j)]
}
}
vec
hist(vec)
barplot(vec)
data_mat
data_mat[1,] <- vec
data_mat <- matrix(NA, nrow = 1, ncol = 50)
data_mat[1,] <- vec
detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5)
devtools::load_all(".")
detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 1, b0 = 1, M = 500)
Rcpp::sourceCpp("src/code.cpp")
devtools::load_all(".")
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 1, b0 = 1, M = 500)
out$rho
data_mat
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 1, b0 = 1, M = 1000)
out$order
data_mat <- matrix(NA, nrow = 1, ncol = 100)
betas <- c(rep(0.45, 25),rep(0.14,75))
inf_times <- sim_epi_data(10000, 10, 100, betas, 1/8)
vec <- rep(0,100)
names(vec) <- as.character(1:100)
for(j in 1:100){
if(as.character(j) %in% names(table(floor(inf_times)))){
vec[j] = table(floor(inf_times))[which(names(table(floor(inf_times))) == j)]
}
}
data_mat[1,] <- vec
data_mat
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 1, b0 = 1, M = 1000)
out$order
out$rho
devtools::load_all(".")
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 1, b0 = 1, M = 1000)
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 10, b0 = 100, M = 1000)
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 40, b0 = 10, M = 1000)
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 40, b0 = 10, M = 1000)
devtools::load_all(".")
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 40, b0 = 10, M = 1000)
out$order
out$order[1000,]
table(out$order[1000,])
out$rho
10/10000
data_mat <- matrix(NA, nrow = 1, ncol = 100)
betas <- c(rep(0.45, 25),rep(0.14,75))
inf_times <- sim_epi_data(10000, 10, 100, betas, 1/8)
devtools::load_all(".")
data_mat <- matrix(NA, nrow = 1, ncol = 100)
betas <- c(rep(0.45, 25),rep(0.14,75))
inf_times <- sim_epi_data(10000, 10, 100, betas, 1/8)
vec <- rep(0,100)
names(vec) <- as.character(1:100)
for(j in 1:100){
if(as.character(j) %in% names(table(floor(inf_times)))){
vec[j] = table(floor(inf_times))[which(names(table(floor(inf_times))) == j)]
}
}
data_mat[1,] <- vec
out <- detect_cp_epi(data = data_mat, n_iterations = 1000, q = 0.5, xi = 1/8, a0 = 40, b0 = 10, M = 1000)
out$rho
table(out$order[1000,])
devtools::load_all(".")
?detect_cp
data_mat <- matrix(NA, nrow = 1, ncol = 100)
betas <- c(rep(0.45, 25),rep(0.14,75))
inf_times <- sim_epi_data(10000, 10, 100, betas, 1/8)
inf_times_vec <- rep(0,100)
names(inf_times_vec) <- as.character(1:100)
for(j in 1:100){
if(as.character(j) %in% names(table(floor(inf_times)))){
inf_times_vec[j] = table(floor(inf_times))[which(names(table(floor(inf_times))) == j)]
}
}
data_mat[1,] <- inf_times_vec
out <- detect_cp(data = data_mat, n_iterations = 500, n_burnin = 250,
params = list(xi = 1/8, a0 = 40, b0 = 10, M = 1000), kernel = "epi")
print(out)
summary(out)
posterior_estimate(out)
out$orders
devtools::load_all(".")
posterior_estimate(out)
out <- detect_cp(data = data_mat, n_iterations = 500, n_burnin = 250,
params = list(xi = 1/8, a0 = 40, b0 = 10, M = 1000), kernel = "epi")
print(out)
summary(out)
posterior_estimate(out)
table(posterior_estimate(out))
x <- out
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
loss = "VI"
est_cp = posterior_estimate(x, loss = loss)
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
obs = as.factor(rep(1:nrow(x$data), each = ncol(x$data))),
Cluster = as.factor(rep(est_cp, each = ncol(x$data))))
.df_sf_plot
ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, group = obs, colour = Cluster)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::xlab("Time") +
ggplot2::ylab("Proportion of Infected Individuals") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
cp
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)))
ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::xlab("Time") +
ggplot2::ylab("Proportion of Infected Individuals") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::xlab("Time") +
ggplot2::ylab("Proportion of Infected Individuals") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)))
.data_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)))
.df_sf_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)),
obs = rep(1, nrow(x$data)))
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, colour = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::xlab("Time") +
ggplot2::ylab("Proportion of Infected Individuals") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
.df_sf_plot
ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, color = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::xlab("Time") +
ggplot2::ylab("Proportion of Infected Individuals") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)),
obs = rep("1", nrow(x$data)))
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, color = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::xlab("Time") +
ggplot2::ylab("Proportion of Infected Individuals") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, color = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Proportion of Infected Individuals",
y = "Time",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 <- ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, color = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Proportion of Infected Individuals",
y = "Time",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 + ggplot2::theme(legend.position="none")
x_unique <- unique(.df_sf_plot$time)
b <- rep(0, length(x$data))
for(i in 1:x$n_iterations){
cp_iteration <- cumsum(table(x$orders[i,]))[-length(table(x$orders[i,]))]
b[cp_iteration] = b[cp_iteration] + 1
}
b <- b/(x$n_iterations)
p2 <- ggplot2::ggplot(data.frame(x = x_unique, y =b)) +
ggplot2::geom_bar(ggplot2::aes(x = x_unique, y = y), stat="identity", width = 0.5, col = "black") +
ggplot2::theme_linedraw() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(), axis.text.y = ggplot2::element_text(angle = 90)) +
ggplot2::scale_y_continuous(breaks = c(0,.5,1)) +
ggplot2::ylab("Prob.") +
ggplot2::xlab("Time") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p2 <- p2 + ggplot2::theme(legend.position="none")
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = FALSE)
p2
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = FALSE)
p1 <- p1 + ggplot2::theme(legend.position="none")
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = FALSE)
devtools::load_all(".")
out <- detect_cp(data = data_mat, n_iterations = 500, n_burnin = 250,
params = list(xi = 1/8, a0 = 40, b0 = 10, M = 1000), kernel = "epi")
plot(out)
plot(out, plot_freq = TRUE)
posterior_estimate(out)
plot(out, plot_freq = TRUE)
devtools::load_all(".")
out <- detect_cp(data = data_mat, n_iterations = 2000, n_burnin = 250,
params = list(xi = 1/8, a0 = 40, b0 = 10, M = 1000), kernel = "epi")
plot(out, plot_freq = TRUE)
plot(out)
?detect_cp
devtools::load_all(".")
?detect_cp
devtools::load_all(".")
?detect_cp
