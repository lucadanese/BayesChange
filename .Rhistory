ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Proportion of Infected Individuals",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 <- p1 + ggplot2::theme(legend.position="none")
x_unique <- unique(.df_sf_plot$time)
b <- rep(0, length(x$data))
for(i in 1:x$n_iterations){
cp_iteration <- cumsum(table(x$orders[i,]))[-length(table(x$orders[i,]))]
b[cp_iteration] = b[cp_iteration] + 1
}
b <- b/(x$n_iterations)
p2 <- ggplot2::ggplot(data.frame(x = x_unique, y =b)) +
ggplot2::geom_bar(ggplot2::aes(x = x_unique, y = y), stat="identity", width = 0.5, col = "black") +
ggplot2::theme_linedraw() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(), axis.text.y = ggplot2::element_text(angle = 90)) +
ggplot2::scale_y_continuous(breaks = c(0,.5,1)) +
ggplot2::ylab("Prob.") +
ggplot2::xlab("Time") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p2 <- p2 + ggplot2::theme(legend.position="none")
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = FALSE)
}
}
x$kernel_ts
x$univariate_ts
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
maxZealousAttempts
posterior_estimate
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1), kernel = "ts")
print(out)
plot(out)
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1), kernel = "ts")
print(out)
plot(out)
out
plot_freq
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1), kernel = "ts")
print(out)
plot(out)
!plot_freq
x$kernel_ts
x$univariate_ts
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- x$data
.data_plot <- as.data.frame(cbind(vec_data))
.data_plot$time <- rep(1:length(x$data))
.data_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = obs),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 + ggplot2::theme(legend.position="none")
maxZealousAttempts = 5
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- x$data
.data_plot <- as.data.frame(cbind(vec_data))
.data_plot$time <- rep(1:length(x$data))
.data_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = obs),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 + ggplot2::theme(legend.position="none")
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
?clust_cp
data_mat <- matrix(NA, nrow = 5, ncol = 100)
data_mat[1,] <- as.numeric(c(rnorm(50,0,0.100), rnorm(50,1,0.250)))
data_mat[2,] <- as.numeric(c(rnorm(50,0,0.125), rnorm(50,1,0.225)))
data_mat[3,] <- as.numeric(c(rnorm(50,0,0.175), rnorm(50,1,0.280)))
data_mat[4,] <- as.numeric(c(rnorm(25,0,0.135), rnorm(75,1,0.225)))
data_mat[5,] <- as.numeric(c(rnorm(25,0,0.155), rnorm(75,1,0.280)))
out <- clust_cp(data = data_mat, n_iterations = 5000, n_burnin = 1000,
L = 1, B = 1000, params = list(phi = 0.5), kernel = "ts")
print(out)
plot(out)
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1), kernel = "ts")
print(out)
plot(out, plot_freq = TRUE)
plot(out, plot_freq = FALSE)
x <- out
if(!plot_freq){
if(x$kernel_ts){
if(x$univariate_ts){
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- x$data
.data_plot <- as.data.frame(cbind(vec_data))
.data_plot$time <- rep(1:length(x$data))
.data_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = obs),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 + ggplot2::theme(legend.position="none")
} else {
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- as.numeric()
for(i in 1:nrow(x$data)){
vec_data <- c(vec_data,x$data[i,])
}
.data_plot <- as.data.frame(cbind(vec_data, sort(rep(1:nrow(x$data),ncol(x$data)))))
.data_plot$V2 <- factor(.data_plot$V2, labels = unique(paste0("obs ", .data_plot$V2)) )
.data_plot$time <- rep(1:ncol(x$data),nrow(x$data))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = V2),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position="top", legend.key.width = ggplot2::unit(1, 'cm'))
p1
}
}
if(x$kernel_epi){
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)),
obs = rep("1", nrow(x$data)))
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
p1 <- ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, color = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Proportion of Infected Individuals",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 + ggplot2::theme(legend.position="none")
}
} else {
if(x$kernel_ts){
if(x$univariate_ts){
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- x$data
.data_plot <- as.data.frame(cbind(vec_data))
.data_plot$time <- rep(1:length(x$data))
.data_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = obs),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = " ",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 <- p1 + ggplot2::theme(legend.position="none")
x_unique <- unique(.data_plot$time)
b <- rep(0, length(x$data))
for(i in 1:x$n_iterations){
cp_iteration <- cumsum(table(x$orders[i,]))[-length(table(x$orders[i,]))]
b[cp_iteration] = b[cp_iteration] + 1
}
b <- b/(x$n_iterations)
p2 <- ggplot2::ggplot(data.frame(x = x_unique, y =b)) +
ggplot2::geom_bar(ggplot2::aes(x = x_unique, y = y), stat="identity", width = 0.5, col = "black") +
ggplot2::theme_linedraw() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(), axis.text.y = ggplot2::element_text(angle = 90)) +
ggplot2::scale_y_continuous(breaks = c(0,.5,1)) +
ggplot2::ylab("Prob.") +
ggplot2::xlab("Time") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p2 <- p2 + ggplot2::theme(legend.position="none")
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = FALSE)
} else {
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- as.numeric()
for(i in 1:nrow(x$data)){
vec_data <- c(vec_data,x$data[i,])
}
.data_plot <- as.data.frame(cbind(vec_data, sort(rep(1:nrow(x$data),ncol(x$data)))))
.data_plot$V2 <- factor(.data_plot$V2, labels = unique(paste0("obs ", .data_plot$V2)) )
.data_plot$time <- rep(1:ncol(x$data),nrow(x$data))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = V2),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = " ",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position="top", legend.key.width = ggplot2::unit(1, 'cm'))
x_unique <- unique(.data_plot$time)
b <- rep(0, ncol(x$data))
for(i in 1:x$n_iterations){
cp_iteration <- cumsum(table(x$orders[i,]))[-length(table(x$orders[i,]))]
b[cp_iteration] = b[cp_iteration] + 1
}
b <- b/(x$n_iterations)
p2 <- ggplot2::ggplot(data.frame(x = x_unique, y =b)) +
ggplot2::geom_bar(ggplot2::aes(x = x_unique, y = y), stat="identity", width = 0.5, col = "black") +
ggplot2::theme_linedraw() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(), axis.text.y = ggplot2::element_text(angle = 90)) +
ggplot2::scale_y_continuous(breaks = c(0,.5,1)) +
ggplot2::ylab("Prob.") +
ggplot2::xlab("Time") +
ggplot2::theme_minimal()
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = TRUE)
}
}
if(x$kernel_epi){
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)),
obs = rep("1", nrow(x$data)))
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
p1 <- ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, color = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Proportion of Infected Individuals",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 <- p1 + ggplot2::theme(legend.position="none")
x_unique <- unique(.df_sf_plot$time)
b <- rep(0, length(x$data))
for(i in 1:x$n_iterations){
cp_iteration <- cumsum(table(x$orders[i,]))[-length(table(x$orders[i,]))]
b[cp_iteration] = b[cp_iteration] + 1
}
b <- b/(x$n_iterations)
p2 <- ggplot2::ggplot(data.frame(x = x_unique, y =b)) +
ggplot2::geom_bar(ggplot2::aes(x = x_unique, y = y), stat="identity", width = 0.5, col = "black") +
ggplot2::theme_linedraw() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(), axis.text.y = ggplot2::element_text(angle = 90)) +
ggplot2::scale_y_continuous(breaks = c(0,.5,1)) +
ggplot2::ylab("Prob.") +
ggplot2::xlab("Time") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p2 <- p2 + ggplot2::theme(legend.position="none")
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = FALSE)
}
}
time <- V2 <- y <- NULL
if(!plot_freq){
if(x$kernel_ts){
if(x$univariate_ts){
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- x$data
.data_plot <- as.data.frame(cbind(vec_data))
.data_plot$time <- rep(1:length(x$data))
.data_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = obs),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 + ggplot2::theme(legend.position="none")
} else {
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- as.numeric()
for(i in 1:nrow(x$data)){
vec_data <- c(vec_data,x$data[i,])
}
.data_plot <- as.data.frame(cbind(vec_data, sort(rep(1:nrow(x$data),ncol(x$data)))))
.data_plot$V2 <- factor(.data_plot$V2, labels = unique(paste0("obs ", .data_plot$V2)) )
.data_plot$time <- rep(1:ncol(x$data),nrow(x$data))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = V2),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position="top", legend.key.width = ggplot2::unit(1, 'cm'))
p1
}
}
if(x$kernel_epi){
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)),
obs = rep("1", nrow(x$data)))
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
p1 <- ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, color = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Proportion of Infected Individuals",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 + ggplot2::theme(legend.position="none")
}
} else {
if(x$kernel_ts){
if(x$univariate_ts){
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- x$data
.data_plot <- as.data.frame(cbind(vec_data))
.data_plot$time <- rep(1:length(x$data))
.data_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = obs),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = " ",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 <- p1 + ggplot2::theme(legend.position="none")
x_unique <- unique(.data_plot$time)
b <- rep(0, length(x$data))
for(i in 1:x$n_iterations){
cp_iteration <- cumsum(table(x$orders[i,]))[-length(table(x$orders[i,]))]
b[cp_iteration] = b[cp_iteration] + 1
}
b <- b/(x$n_iterations)
p2 <- ggplot2::ggplot(data.frame(x = x_unique, y =b)) +
ggplot2::geom_bar(ggplot2::aes(x = x_unique, y = y), stat="identity", width = 0.5, col = "black") +
ggplot2::theme_linedraw() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(), axis.text.y = ggplot2::element_text(angle = 90)) +
ggplot2::scale_y_continuous(breaks = c(0,.5,1)) +
ggplot2::ylab("Prob.") +
ggplot2::xlab("Time") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p2 <- p2 + ggplot2::theme(legend.position="none")
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = FALSE)
} else {
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- as.numeric()
for(i in 1:nrow(x$data)){
vec_data <- c(vec_data,x$data[i,])
}
.data_plot <- as.data.frame(cbind(vec_data, sort(rep(1:nrow(x$data),ncol(x$data)))))
.data_plot$V2 <- factor(.data_plot$V2, labels = unique(paste0("obs ", .data_plot$V2)) )
.data_plot$time <- rep(1:ncol(x$data),nrow(x$data))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = V2),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = " ",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position="top", legend.key.width = ggplot2::unit(1, 'cm'))
x_unique <- unique(.data_plot$time)
b <- rep(0, ncol(x$data))
for(i in 1:x$n_iterations){
cp_iteration <- cumsum(table(x$orders[i,]))[-length(table(x$orders[i,]))]
b[cp_iteration] = b[cp_iteration] + 1
}
b <- b/(x$n_iterations)
p2 <- ggplot2::ggplot(data.frame(x = x_unique, y =b)) +
ggplot2::geom_bar(ggplot2::aes(x = x_unique, y = y), stat="identity", width = 0.5, col = "black") +
ggplot2::theme_linedraw() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(), axis.text.y = ggplot2::element_text(angle = 90)) +
ggplot2::scale_y_continuous(breaks = c(0,.5,1)) +
ggplot2::ylab("Prob.") +
ggplot2::xlab("Time") +
ggplot2::theme_minimal()
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = TRUE)
}
}
if(x$kernel_epi){
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
.df_sf_plot <- data.frame(y = as.vector(sapply(1:nrow(x$data), function(y) 1 - cumsum(x$data[y,]) / sum(x$data[y,]))),
x = rep(1:ncol(x$data), nrow(x$data)),
time = rep(1:ncol(x$data),nrow(x$data)),
obs = rep("1", nrow(x$data)))
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
p1 <- ggplot2::ggplot(.df_sf_plot, ggplot2::aes(x = x, y = y, color = obs)) +
ggplot2::geom_line(lwd = 0.5) +
ggplot2::geom_vline(xintercept = unique(.df_sf_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Proportion of Infected Individuals",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 <- p1 + ggplot2::theme(legend.position="none")
x_unique <- unique(.df_sf_plot$time)
b <- rep(0, length(x$data))
for(i in 1:x$n_iterations){
cp_iteration <- cumsum(table(x$orders[i,]))[-length(table(x$orders[i,]))]
b[cp_iteration] = b[cp_iteration] + 1
}
b <- b/(x$n_iterations)
p2 <- ggplot2::ggplot(data.frame(x = x_unique, y =b)) +
ggplot2::geom_bar(ggplot2::aes(x = x_unique, y = y), stat="identity", width = 0.5, col = "black") +
ggplot2::theme_linedraw() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(), axis.text.y = ggplot2::element_text(angle = 90)) +
ggplot2::scale_y_continuous(breaks = c(0,.5,1)) +
ggplot2::ylab("Prob.") +
ggplot2::xlab("Time") +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p2 <- p2 + ggplot2::theme(legend.position="none")
ggpubr::ggarrange(p1, p2, nrow = 2, heights = c(2,1), common.legend = FALSE)
}
}
!plot_freq
time <- V2 <- y <- NULL
!plot_freq
x$kernel_ts
x$univariate_ts
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- x$data
.data_plot <- as.data.frame(cbind(vec_data))
.data_plot$time <- rep(1:length(x$data))
.data_plot$obs <- as.factor(rep(1, ncol(.data_plot)))
p1 <- ggplot2::ggplot(.data_plot) +
ggplot2::geom_line(ggplot2::aes(x = time, y = vec_data, color = obs),  linetype = 1) +
ggplot2::geom_vline(xintercept = unique(.data_plot$time)[cp], linetype = 2) +
ggplot2::labs(x = "Time",
y = "Value",
color = NULL) +
ggplot2::scale_colour_brewer(palette = "Set1") +
ggplot2::theme_minimal()
p1 + ggplot2::theme(legend.position="none")
x$univariate_ts
est_cp = posterior_estimate(x, loss = loss, maxNClusters = maxNClusters,
nRuns = nRuns, maxZealousAttempts = maxZealousAttempts)
cp <- cumsum(table(est_cp))[-length(table(est_cp))]
vec_data <- as.numeric()
for(i in 1:nrow(x$data)){
vec_data <- c(vec_data,x$data[i,])
}
.data_plot <- as.data.frame(cbind(vec_data, sort(rep(1:nrow(x$data),ncol(x$data)))))
x$kernel_epi
devtools::load_all(".")
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1), kernel = "ts")
print(out)
plot(out, plot_freq = FALSE)
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1), kernel = "ts")
print(out)
plot(out, plot_freq = FALSE)
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1), kernel = "ts")
print(out)
plot(out)
plot.DetectCpObj(out)
out
out$data
out$kernel_ts
out$kernel_epi
out$univariate_ts
devtools::load_all(".")
data_vec <- as.numeric(c(rnorm(50,0,0.1), rnorm(50,1,0.25)))
out <- detect_cp(data = data_vec, n_iterations = 2500, n_burnin = 500,
params = list(a = 1, b = 1, c = 0.1), kernel = "ts")
print(out)
plot(out)
